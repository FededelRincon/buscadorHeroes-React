{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","search","props","to","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","Navbar","user","useHistory","activeClassName","exact","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","useLocation","queryString","parse","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a427c72.chunk.js","sourcesContent":["import { createContext } from 'react';\n\n\nexport const AuthContext = createContext();","\n\nexport const types = {\n    login: '[auth] login',\n    logout: '[auth] logout'\n}","import { types } from '../types/types';\n\n\n// const state = {\n//     name: 'Fernando',\n//     logged: true\n// }\n\n// const state = {\n//     name: '',\n//     logged: false\n// }\n\n\nexport const authReducer = (state = {}, action ) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n\n        case types.logout:\n            return {\n                logged: false  //asi xq no me interesa el payload para hacer logout\n            }\n    \n        default:\n            return state;\n    }\n\n\n\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest //path, location, computerMatch, etc\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname+rest.location.search)\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ... props} /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired  //xq son \"funcionals components\"\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest //path y exact\n}) => {\n\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ... props} /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired  //xq son \"funcionals components\"\n}","import React, { useContext } from 'react'\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n\n    const { dispatch } = useContext(AuthContext);\n\n    const handleLogin = () => {\n        // history.push('/'); // nos redirecciona hasta esta pagina (pero sin sobreescribir el historial)\n        // history.replace('/'); // tambien nos redirecciona hasta esta pagina, pero SI sobreescribe el donde esta (osea que si hace para atras, esta pagina nunca existio)\n\n        const lastPath = localStorage.getItem('lastPath') || '/'\n\n        dispatch({\n            type: types.login,\n            payload: {\n                name: 'Fede'\n            }\n        })\n\n        // history.replace('/');\n        history.replace(lastPath);\n\n    }\n\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={ handleLogin }\n            >\n                Login\n            </button>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const { user, dispatch } = useContext(AuthContext);\n    const { name } = user;\n\n    const history = useHistory();\n\n    const handleLogout = () => {\n        dispatch({\n            type: types.logout\n        })\n\n        history.replace('/login');\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span className=\"nav-item nav-link text-info\" >\n                        { name }\n                    </span>\n\n                    <button \n                        className=\"btn nav-item nav-link\"\n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport const HeroCard = ({ \n    id,\n    superhero,\n    alter_ego,\n    first_appearance,\n    characters    \n}) => {\n    return (\n        <div className=\"card ms-3\" style={ { maxWidth: 540 } } >\n            <div className=\"row no-gutters\">\n\n                <div className=\"col-md-4\">\n                    <img src={ `./assets/heroes/${id}.jpg` } alt={ superhero } className=\"card-img\"  />\n                </div>\n\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"> { superhero} </h5>\n                        <p className=\"card-text\"> { alter_ego} </p>\n\n                        {\n                            ( alter_ego !== characters)\n                            && <p className=\"card-text\"> { characters } </p>\n                        }\n\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\"> { first_appearance } </small>\n                        </p>\n\n                        <Link to={ `./hero/${id}` }>\n                            Mas ...\n                        </Link>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({ publisher }) => {\n\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ]);  //por el useMemo, si el publisher cambia, entonces renderiza de nuevo, sino mostra \"lo que tenias\"\n    \n    // const heroes = getHeroesByPublisher( publisher );\n    \n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn \">\n            {\n                heroes.map(hero => (\n                    <HeroCard \n                        key={ hero.id }\n                        { ...hero } // mando id, superhero, character, etc... todo junto\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublisher = ['DC Comics', 'Marvel Comics'];\n\n    if( !validPublisher.includes(publisher) ){\n        throw new Error (`Publisher \"${publisher}\" no es correcto `)\n    }\n\n    return heroes.filter( hero => hero.publisher === publisher)\n\n\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n\n            <HeroList publisher={ 'Marvel Comics' } />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { Redirect, useParams } from 'react-router-dom';\nimport { getHeroById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ({ history }) => {\n\n\n\n    const { heroeId } = useParams(); //no hay otra cosa mas que heroeId kkk\n    \n\n    const hero = useMemo(() => getHeroById( heroeId ), [ heroeId ]);  //por el useMemo, si el publisher cambia, entonces renderiza de nuevo, sino mostra \"lo que tenias\"\n    // const hero = getHeroById( heroeId );\n\n    \n    if ( !hero  /*si hero no existe */ ) {\n        return <Redirect to=\"/\" /> /*mandame a la pagina de inicio */\n    };\n\n    const handleReturn = () => {\n        //me fijo en el historial... si tiene mas de 2 cosas es xq vino navegando, ergo volvete para atras, pero si tiene menos de 2 es xq entro directamente desde la url, entonces redireccioname a la pagina de inicio\n        if (history.length <= 2) {\n            history.push('/')\n        } else {\n            history.goBack()\n        }\n\n    }\n\n    const {\n        // id, //ya lo saco del heroeId\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img \n                    // src={`../assets/heroes/${heroeId}.jpg`}\n                    src={ `./assets/heroes/${ heroeId }.jpg` }\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                    alt={ superhero}\n                />\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeInRight\">\n                <h3> { superhero } </h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> <b> Alter ego: </b> {\"\\u00A0\"} {alter_ego} </li>\n                    <li className=\"list-group-item\"> <b> Publisher: </b> {\"\\u00A0\"} {publisher} </li>\n                    <li className=\"list-group-item\"> <b> First appearance: </b> {\"\\u00A0\"} {first_appearance} </li>\n                </ul>\n\n                <h5> Characters </h5>\n                <p> { characters } </p>\n\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={ handleReturn }\n                >\n                    Return\n                </button>\n            </div>\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroById = ( id ) => {\n\n    // const validPublisher = ['DC Comics', 'Marvel Comics'];\n\n    // if( !validPublisher.includes(publisher) ){\n    //     throw new error (`Publisher \"${publisher}\" no es correcto `)\n    // }\n\n    // return heroes.filter( hero => hero.id === id); //filter consigue el 1er y sigue buscando por el 2do\n    return heroes.find( hero => hero.id === id); //este encuentra el 1er y corta la busqueda\n\n\n}\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>Dc Screen</h1>\n            <hr />\n\n            <HeroList publisher={ 'DC Comics' } />\n\n        </div>\n    )\n}\n","import React from 'react'\n//eslint-disable-next-line\nimport queryString from 'query-string';\n\nimport { useLocation } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n\n    const location = useLocation();\n    const { q = '' } = queryString.parse( location.search ); //q vacio es undefined, por eso lo seteo como '' para q no crashee\n\n    \n    const [ formValues, handleInputChange ] = useForm({\n        searchText: q\n    });\n    \n    const { searchText } = formValues;\n    \n    // const heroesFiltered = useMemo(() => getHeroesByName( q ), [ q ]);\n    const heroesFiltered = getHeroesByName( q );\n    \n    const handleSearch = (e) => {\n        e.preventDefault();\n\n        history.push(`?q=${ searchText }`);\n\n    }\n\n\n\n    return (\n        <div>\n            <h1> Search SCREEN </h1>\n            <hr />\n\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4> Search Form</h4>\n                    <hr />\n\n                    <form onSubmit={ handleSearch } >\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            autoComplete=\"off\"\n                            name=\"searchText\"\n                            value={ searchText }\n                            onChange={ handleInputChange }\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search ...\n                        </button>\n                    </form>\n                </div>\n\n                <div className=\"col-7\">\n                    <h4> Results </h4>\n                    <hr />\n\n                    {/* a esto lo comento porque en getHeroesByName, si el q esta '' hago que devuelva todos el arreglo de heroes\n                    {\n                        (q ==='') \n                            && \n                            <div className=\"alert alert-info\">\n                                Search a hero\n                            </div>\n                    } */}\n\n                    {\n                        (q !=='' && heroesFiltered.length === 0) \n                            && \n                            <div className=\"alert alert-danger\">\n                                There is no a hero with { q }\n                            </div>\n                    }\n\n                    {\n                        heroesFiltered.map( hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                {... hero} //resto de propiedades\n                            />\n                        ))\n                    }\n\n                </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n","import { useState } from 'react'\n\nexport const useForm = ( initialState = {} ) => { //initialState= seria el name, email, password, todos con string vacio como default, y sino las cosas q vaya escribiendo\n\n    const [values, setValues] = useState( initialState )\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value\n            //target.name, viene del input -> name=\"name\"\n            //target.value viene del input -> value = { name } \n        })\n    }\n\n    return [ values, handleInputChange, reset ]\n\n}","import { heroes } from \"../data/heroes\"\n\n\n\nexport const getHeroesByName = ( name = '' ) => {\n\n    if (name === '') {\n        return heroes;\n    }\n\n\n    name = name.toLowerCase();\n\n    return heroes.filter( hero => hero.superhero.toLowerCase().includes( name ) )\n\n\n}\n\n\n\n\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Navbar } from '../components/ui/Navbar';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container mt-4\">\n                <Switch >\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } /> {/* pagina de todos los marvels */}\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } /> {/*pagina de un heroe en concreto */}\n                    <Route exact path=\"/dc\" component={ DcScreen } /> {/*pagina de todos los heroes de DC */}\n                    <Route exact path=\"/search\" component={ SearchScreen } /> {/*pagina de todos los heroes de DC */}\n\n\n                    <Redirect to=\"/marvel\" /> {/*entro con la pagina q sea a este router, y si no combina con ninguno, quiero q me mandes al /marvel  */}\n                </Switch>    \n            </div>   \n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport {\n    // BrowserRouter as Router,\n    HashRouter as Router,\n    Switch\n} from 'react-router-dom';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { AuthContext } from '../auth/AuthContext';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\n\nexport const AppRouter = () => {\n\n  const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n          <div>\n            <Switch>\n                <PublicRoute \n                  exact\n                  path=\"/login\" \n                  component={ LoginScreen } \n                  isAuthenticated={ user.logged }\n                />\n\n                <PrivateRoute \n                  path=\"/\" \n                  component={ DashboardRoutes }\n                  isAuthenticated={ user.logged }\n                />\n            </Switch>\n          </div>\n        </Router>\n    );\n}\n","import React, { useEffect, useReducer } from 'react'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport { AppRouter } from './routers/AppRouter'\n\n\nconst init = () => {\n    return JSON.parse( localStorage.getItem('user') ) || { logged: false };\n}\n\n\nexport const HeroesApp = () => {\n\n    const [ user, dispatch ] = useReducer(authReducer, {}, init);\n    \n\n    useEffect(() => {\n        \n        localStorage.setItem('user', JSON.stringify( user )) \n\n    }, [user])\n\n    return (\n        <AuthContext.Provider value={{ user, dispatch }} >\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\n// import './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <HeroesApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}